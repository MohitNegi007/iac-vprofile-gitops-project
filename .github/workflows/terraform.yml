name: "Vprofile IAC"

on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    # If you want to run the workflow on pull requests *into* main
    branches:
      - main
    paths:
      - terraform/**

env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest # <- corrected to ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform # <- corrected path to match "terraform" folder

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.6.3
        # (Uncomment above if you want a specific version instead of the latest.)

      - name: Terraform init
        id: init
        # Include backend configuration properly. Example uses environment variables:
        run: terraform init \
          -backend-config="bucket=${{ env.BUCKET_TF_STATE }}" \
          -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform format check
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out=planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
